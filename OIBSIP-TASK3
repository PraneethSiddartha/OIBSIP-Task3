from google.colab import drive
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

drive.mount('/content/drive/')
data = pd.read_csv('/content/drive/MyDrive/CarPrice_Assignment.csv')

data.head(10)

data.tail(10)

data.info()

data.describe()

data.isnull().sum()

data.dtypes

data.CarName.unique()

data["cylindernumber"]

plt.figure(figsize = (10, 10))
sns.heatmap(data.corr())
plt.show()

plt.figure(figsize = (10, 10))
sns.distplot(data.price)
plt.show()

dataf = pd.DataFrame(data)
y = data["price"]
x = data["carbody"]
pr = plt.figure(figsize = (30,15))
plt.xlabel("Car Body Type", fontsize = 25)
plt.ylabel("Price of Car", fontsize = 25)
plt.xticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.yticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.bar(x, y, color = "blue", align = "center")
plt.show()

plt.figure(figsize = (50,20))
sns.barplot(data, x = "horsepower", y = "price")
plt.xlabel("Car Body Type", fontsize = 45)
plt.ylabel("Price of the Car", fontsize = 45)

data = pd.DataFrame(data)
y = data["price"]
x = data["citympg"]
x1 = data['highwaympg']
pr = plt.figure(figsize = (35, 15))
plt.xlabel("City Milage", fontsize = 35)
plt.ylabel("Price of the Car", fontsize = 35)
plt.xticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.yticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.bar(x, y, color = "r", align = "center")
plt.show()

data = pd.DataFrame(data)
y = data["price"]
x1 = data['highwaympg']
pr = plt.figure(figsize = (35, 15))
plt.xlabel("Highway Milage", fontsize = 35)
plt.ylabel("Price of the Car", fontsize = 35)
plt.xticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.yticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.bar(x1, y, color = "g", align = "edge")
plt.show()

data = pd.DataFrame(data)
y = data["price"]
x1 = data["cylindernumber"]
pr = plt.figure(figsize = (35, 15))
plt.xlabel("Cylinder Number", fontsize = 35)
plt.ylabel("Price of the Car", fontsize = 35)
plt.xticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.yticks(fontweight = "bold", rotation = "horizontal", fontsize = 15)
plt.bar(x1, y, color = "yellow", align = "center")
plt.show()

sns.violinplot(data, y = "price", hue = "CarName")

pr = plt.figure(figsize = (11,7))
plt.title("Correlation between Horsepower and Price")
sns.regplot(x = "horsepower", y = "price", data = data)

p = "price"
data = data[["horsepower", "citympg", "highwaympg", "price"]]
x = np.array(data.drop([p], 1))
y = np.array(data[p])

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.5)

from sklearn.metrics import mean_absolute_error
from sklearn.tree import DecisionTreeRegressor
model = DecisionTreeRegressor()
model.fit(X_train, y_train)
predictions = model.predict(X_test)
model.score(X_test, predictions)

from sklearn.linear_model import LinearRegression
m = LinearRegression()
m.fit(X_train, y_train)
predictions = m.predict(X_test)
model.score(X_test, predictions)
